%{
open Solve

open Solve.TermTypes
open Solve.TermTypes.Transformers

open Solve.Rule
open Solve.Rule.Transformers

%}

%start start

%token <int> INT
%token <string> ATOM
%token <string> VAR
%token <string> STRING
%token IS
%token TRUE
%token FALSE
%token NULL
%token LEFT_BRACKET
%token RIGHT_BRACKET
%token LEFT_BRACK
%token RIGHT_BRACK
%token COLON
%token MINUS
%token COMMA
%token DOT
%token EOF
%type <Solve.Rule.Rule option> start


%%

start: prog { $1 }

prog:
	| EOF { None }
	| fact { Some $1 }
	| rule { Some $1 }

fact:
	| signature { Rule($1, True) }
	
rule:
    | signature COLON MINUS body { Rule($1, $4) }

signature:
	| ATOM LEFT_BRACKET parameterList RIGHT_BRACKET { Signature($1, $3) }

parameter:
    | INT { Parameter(TypedTerm(TypedNumberTerm(NumberTerm (float $1)))) }

parameterList:
	| parameter { [$1] }
    | parameterList COMMA parameter { $3::$1 }
	| { [] }

body:
    | TRUE { True }
	| FALSE { False }
	| VAR IS calcExpr { CalcExpr(VariableTerm(Variable($1)), $3) }

calcExpr:
	| { Value(CalcAny(VariableTerm(Variable("_")))) }